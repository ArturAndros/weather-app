{"version":3,"sources":["reportWebVitals.js","app/components/main/types.js","app/components/main/reducer.js","app/init/rootReducer.js","app/init/middleware.js","app/init/store.js","app/navigation/history.js","app/navigation/book.js","img/search.svg","app/api/config.js","app/api/index.js","app/components/main/actions.js","app/elements/SearchBar.js","img/geo.svg","app/elements/GeoLocation.js","app/elements/WeatherDate.js","app/elements/CurrentWeather.js","app/elements/ShortDescription.js","img/drop.svg","app/elements/WeatherDaily.js","app/elements/WeekWeather.js","img/like.svg","img/heart.svg","img/likeActive.svg","app/elements/Heart.js","app/components/main/MainWeather.js","app/hooks/useWeatherFetch.js","app/pages/main/index.js","app/components/favorites/index.js","app/pages/favorites/index.js","app/components/city/index.js","app/pages/city/index.js","app/navigation/index.js","app/components/header/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","types","Object","freeze","WEATHER_START_FETCHING","WEATHER_STOP_FETCHING","WEATHER_FILL","WEATHER_FILL_WEEK","WEATHER_SET_FETCHING_ERROR","CHANGE_LOCATION","WEATHER_SET_ASYNC","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","initialState","data","dataWeek","selectedCity","isFetching","error","initialStateFavorites","rootReducer","combineReducers","weather","state","type","payload","favorites","name","keys","reduce","object","key","composeEnhancers","createLogger","duration","collapsed","colors","title","action","prevState","nextState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","history","createBrowserHistory","book","root","city","API_KEY","API_BASE_URL","api","fetch","weekFetch","lat","coord","lon","weatherActions","changeLocation","startFetching","stopFetching","weatherFill","weatherFillWeek","setFetchingError","fetchAsync","dispatch","a","response","status","json","results","responseWeek","resultsWeek","favoritesActions","addToFavorites","removeFromFavorites","Search","styled","input","attrs","placeholder","search","SearchBar","useState","setCity","useDispatch","onChange","event","target","value","onKeyDown","keyCode","Geo","div","SpanGeo","span","GeoLocation","alt","src","geo","LocalDate","WeatherDate","localDate","Date","dt","timezone","day","getUTCDay","hours","getUTCHours","minutes","getUTCMinutes","Weather","Temperature","CurrentWeather","main","icon","parseInt","temp","Description","p","ShortDescription","feels_like","Wrapper","Day","Humidity","Percentage","WeatherDaily","source","Intl","DateTimeFormat","weekday","format","drop","humidity","WeekWeather","slice","map","item","index","Favorites","likeActive","Heart","like","HeartFull","heart","HeartButton","props","useSelector","stateFavorites","dataAll","isCityChecked","hasOwnProperty","onClick","MainWeather","useEffect","useWeatherFetch","isLoading","onSearch","console","log","daily","Main","Line","spinnerJSX","length","dataJSX","values","Fragment","to","City","id","useParams","deletedCity","Routes","exact","path","Header","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.66746821.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const types = Object.freeze({\r\n    //sync\r\n    WEATHER_START_FETCHING:'WEATHER_START_FETCHING',\r\n    WEATHER_STOP_FETCHING:'WEATHER_STOP_FETCHING',\r\n    WEATHER_FILL:'WEATHER_FILL',\r\n    WEATHER_FILL_WEEK:'WEATHER_FILL_WEEK',\r\n    WEATHER_SET_FETCHING_ERROR:'WEATHER_SET_FETCHING_ERROR',\r\n    CHANGE_LOCATION:'CHANGE_LOCATION',\r\n    //async\r\n    WEATHER_SET_ASYNC:'WEATHER_SET_ASYNC',\r\n\r\n    //favorites\r\n    ADD_TO_FAVORITES:'ADD_TO_FAVORITES',\r\n    REMOVE_FROM_FAVORITES:'REMOVE_FROM_FAVORITES',\r\n})","import {types} from './types';\r\nconst initialState = {\r\n    data:null,\r\n    dataWeek:null,\r\n    selectedCity:'London',\r\n    isFetching:false,\r\n    error:null,\r\n}\r\n\r\nexport const weatherReducer = (state = initialState, {type, payload})=>{\r\n    switch (type) {\r\n        case types.WEATHER_START_FETCHING:return{\r\n            ...state,\r\n            isFetching: true,\r\n        };\r\n        case types.WEATHER_STOP_FETCHING:return{\r\n            ...state,\r\n            isFetching:false,\r\n        };\r\n        case types.WEATHER_SET_FETCHING_ERROR:return{\r\n            ...state,\r\n            data:null,\r\n            error: payload,\r\n        };\r\n        case types.WEATHER_FILL:return{\r\n            ...state,\r\n            data:payload,\r\n            error:null,\r\n        };\r\n        case types.WEATHER_FILL_WEEK:return{\r\n            ...state,\r\n            dataWeek: payload,\r\n            error:null,\r\n        }\r\n        case types.CHANGE_LOCATION:return{\r\n            ...state,\r\n            selectedCity: payload,\r\n            data:null,\r\n        };\r\n        default :return state\r\n    }\r\n}\r\n\r\n\r\nconst initialStateFavorites = {}\r\n export const favoritesReducer = (state = initialStateFavorites, {type,payload})=> {\r\n    switch (type) {\r\n        case types.ADD_TO_FAVORITES: {\r\n            return {\r\n                ...state,\r\n                [payload.name]:payload.data\r\n            }\r\n        }\r\n        case types.REMOVE_FROM_FAVORITES:{\r\n            // console.log('REMOVE_FROM_FAVORITES')\r\n            // console.log(typeof state)\r\n            // console.log(typeof payload)\r\n            // console.log(payload)\r\n            // console.log(state)\r\n            // delete state[payload] it is not good option as we loose state management\r\n            return  Object.keys(state).reduce((object, key) => {\r\n                if (key !== payload) {\r\n                    object[key] = state[key]\r\n                }\r\n                return object\r\n            }, {})\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\n\r\n//Reducers\r\n\r\nimport {weatherReducer as weather} from \"../components/main/reducer\";\r\nimport {favoritesReducer as favorites} from \"../components/main/reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    // user,people,films\r\n    weather, favorites\r\n})","import {compose} from 'redux';\r\nimport {createLogger} from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const logger = createLogger({\r\n    duration:true,\r\n    collapsed:true,\r\n    colors:{\r\n        title:(action)=>{\r\n            return action.error ? 'firebrick':'deepskyblue';\r\n        },\r\n        prevState:  ()=>'#1C5FAF',\r\n        action:     ()=>'#149945',\r\n        nextState:  ()=>'#A47104',\r\n        error:      ()=>'ff0005'\r\n    }\r\n});\r\n\r\nconst developmentEnvironment = process.env.NODE_ENV==='development';\r\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\r\nconst composeEnhancers = developmentEnvironment && devtools ? devtools : compose;\r\n\r\nconst middleware = [thunk];\r\n\r\nif(developmentEnvironment){\r\n    middleware.push(logger);\r\n}\r\n\r\nexport {composeEnhancers,middleware};\r\n","//Core\r\nimport {createStore, applyMiddleware} from 'redux';\r\n\r\n//Other\r\nimport {rootReducer} from './rootReducer';\r\n\r\nimport {\r\n    composeEnhancers,\r\n    middleware\r\n} from './middleware';\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(...middleware))\r\n)\r\n","import {createBrowserHistory} from \"history\";\r\n\r\nexport const history = createBrowserHistory()\r\n","export const book = Object.freeze({\r\n    root:'/',\r\n    favorites:'/favorites',\r\n    city:'/city/:id',\r\n})","export default __webpack_public_path__ + \"static/media/search.a613ae96.svg\";","export const API_KEY='5e9d55085b38e834cd8a0dba8d5944f0';\r\nexport const API_BASE_URL = 'https://api.openweathermap.org/';\r\n","import {API_KEY,API_BASE_URL} from \"./config\";\r\n\r\nexport const api = Object.freeze({\r\n    weather: {\r\n\r\n        fetch: (city)=> {\r\n            return fetch(`${API_BASE_URL}data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\r\n        },\r\n        weekFetch:(data)=>{\r\n            let lat = data.coord.lat\r\n            let lon = data.coord.lon\r\n            return fetch(`${API_BASE_URL}data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\r\n        }\r\n    }\r\n});","//import api\r\nimport {api} from \"../../api/index\";\r\n//import types\r\nimport {types} from './types';\r\n\r\nexport const weatherActions = Object.freeze({\r\n    changeLocation : (city) => {\r\n        return {\r\n            type: types.CHANGE_LOCATION,\r\n            payload:city,\r\n        }\r\n    },\r\n    startFetching:()=>{\r\n        return {type:types.WEATHER_START_FETCHING}\r\n    },\r\n    stopFetching:()=>{\r\n        return {type:types.WEATHER_STOP_FETCHING}\r\n    },\r\n    weatherFill:(payload)=>{\r\n        return{\r\n            type:types.WEATHER_FILL,\r\n            payload\r\n        }\r\n    },\r\n    weatherFillWeek:(payload)=>{\r\n        return{\r\n            type:types.WEATHER_FILL_WEEK,\r\n            payload\r\n        }\r\n    },\r\n    setFetchingError:(error)=>{\r\n        return{\r\n            type:types.WEATHER_SET_FETCHING_ERROR,\r\n            error:true,\r\n            payload: error\r\n        }\r\n    },\r\n    fetchAsync:(city)=>async (dispatch)=>{\r\n        dispatch(weatherActions.startFetching());\r\n\r\n        const response = await api.weather.fetch(city);\r\n\r\n        if(response.status === 200){\r\n            const results = await response.json();\r\n            dispatch(weatherActions.weatherFill(results))\r\n            //get weather for week\r\n            const responseWeek = await api.weather.weekFetch(results)\r\n            if(responseWeek.status === 200) {\r\n                const resultsWeek = await responseWeek.json()\r\n                dispatch(weatherActions.weatherFillWeek(resultsWeek))\r\n            }else {\r\n                const error ={\r\n                    status: responseWeek.status,\r\n                }\r\n                dispatch(weatherActions.setFetchingError(error))\r\n            }\r\n        }else {\r\n            const error ={\r\n                status: response.status,\r\n            }\r\n            dispatch(weatherActions.setFetchingError(error))\r\n        }\r\n        dispatch(weatherActions.stopFetching())\r\n    },\r\n})\r\n\r\nexport const favoritesActions = Object.freeze({\r\n    addToFavorites:(data)=>{\r\n        return{\r\n            type: types.ADD_TO_FAVORITES,\r\n            payload: {\r\n                name:data.data.name,\r\n                data\r\n            }\r\n        }\r\n    },\r\n    removeFromFavorites:(name)=>{\r\n        return{\r\n            type: types.REMOVE_FROM_FAVORITES,\r\n            payload:name,\r\n        }\r\n    }\r\n\r\n})","import React,{useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport search from '../../img/search.svg';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {weatherActions} from \"../components/main/actions\";\r\n\r\n\r\nconst Search = styled.input.attrs({type:'search', placeholder:'Type here...'})`\r\n\r\n::-webkit-search-decoration,\r\n::-webkit-search-cancel-button,\r\n::-webkit-search-results-button,\r\n::-webkit-search-results-decoration {\r\n  -webkit-appearance:none;\r\n}\r\n\r\n    background: url(${search})  240px     no-repeat;\r\n    background-color:#E2E2E2;\r\n    margin:90px auto 0;\r\n    width:272px;\r\n    padding:0 15px ;\r\n\r\n    \r\n    border:1px solid #8C8C8C;\r\n    border-radius:30px;\r\n    outline:none;\r\n    line-height: 37px;\r\n    \r\n    font-size:16px;\r\n    color:rgba(70, 70, 70, 0.7);\r\n    ::placeholder,\r\n  ::-webkit-input-placeholder {\r\n    color: rgba(70, 70, 70, 0.7);\r\n  }\r\n\r\n`\r\nexport const SearchBar=()=>{\r\n    const[city,setCity]=useState('')\r\n    const dispatch = useDispatch();\r\n\r\n    const onKeyDown = (event) => {\r\n        if (event.keyCode === 13) {\r\n            // onSearch(city);\r\n            dispatch(weatherActions.changeLocation(city))\r\n        }\r\n    };\r\n    return<>\r\n        <Search\r\n            onChange={(event) => setCity(event.target.value)}\r\n            value={city}\r\n            onKeyDown={onKeyDown}\r\n        />\r\n        </>\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/geo.923bc41e.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport geo from '../../img/geo.svg';\r\n\r\nconst Geo = styled.div`\r\n    margin:75px auto 0;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    \r\n    \r\n`\r\nconst SpanGeo = styled.span`\r\n    margin-left:5px;\r\n\r\n    font-size:20px;\r\n    color:rgba(0, 0, 0, 1);\r\n    font-weight:700;\r\n`\r\n\r\nexport const GeoLocation = ({data}) =>{\r\n    return <Geo><img alt={'geo-icon'} src={geo}/><SpanGeo>{data.name}</SpanGeo></Geo>\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst LocalDate = styled.div`\r\n    margin:85px auto 0;\r\n    \r\n    font-size:16px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n`\r\n\r\n\r\n\r\nexport const WeatherDate = ({data}) =>{\r\n\r\n    let localDate =new Date(data.dt*1000 + data.timezone*1000);\r\n    // let options = { weekday: 'long'}\r\n    // let day = new Intl.DateTimeFormat('en-US', options).format(localDate)\r\n    let day = localDate.getUTCDay()\r\n    const week = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat']\r\n    let hours = localDate.getUTCHours()\r\n    let minutes = localDate.getUTCMinutes()\r\n    return <LocalDate>{week[day]+', '+hours+':'+minutes} </LocalDate>\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Weather = styled.div`\r\n    margin:0px auto 0;\r\n    display:flex;\r\n    align-items: center;\r\n    \r\n      @media (max-width: 1000px){\r\n        img{\r\n            width:85px;\r\n        }\r\n    }\r\n`\r\nconst Temperature = styled.span`\r\n    font-style:Roboto;\r\n    font-size:80px;\r\n    line-height:175px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    color:black;\r\n    \r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    \r\n    @media (max-width: 1000px){\r\n        font-size:84px;\r\n        line-height:98px;\r\n    }\r\n`\r\nexport const CurrentWeather = ({main,icon})=>{\r\n    return(\r\n        <Weather>\r\n            <img alt={'weather'} src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n            />\r\n            <Temperature>{parseInt(`${main.temp}`)}°</Temperature>\r\n        </Weather>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Description = styled.p`\r\n    margin:0 auto 10px;\r\n    \r\n    font-size:16px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n`\r\n\r\n\r\n\r\nexport const ShortDescription = ({main,weather}) =>{\r\n    return<>\r\n        <Description>\r\n            Feels like {parseInt(`${main.feels_like}`)}°\r\n        </Description>\r\n        <Description>\r\n            {weather}\r\n        </Description>\r\n    </>\r\n}\r\n","export default __webpack_public_path__ + \"static/media/drop.ac336089.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport drop from '../../img/drop.svg';\r\n\r\nconst Wrapper = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    \r\n    @media (max-width: 1000px){\r\n     flex-direction: row;\r\n     justify-content: space-evenly;\r\n     img{\r\n        width:45px;\r\n     }\r\n  }\r\n    `\r\nconst Day =styled.span`\r\n    font-weight:400;\r\n    font-style:normal;\r\n`\r\nconst Temperature =styled.span`\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 40px;\r\n    line-height: 49px;\r\n    text-align: center;\r\n\r\n    color: #222222;\r\n\r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    \r\n    @media (max-width: 1000px){\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n    font-weight:normal;\r\n    text-shadow:0px;\r\n  }\r\n`\r\nconst Humidity = styled.div`\r\n    display:flex;\r\n    \r\n     @media (max-width: 1000px){\r\n    align-items: center;\r\n    img{\r\n        width:14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Percentage = styled.span`\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 15px;\r\n    line-height: 18px;\r\n    text-align: center;\r\n\r\n    color: #222222;\r\n    \r\n    @media (max-width: 1000px){\r\n    font-weight: 400;\r\n}\r\n`\r\n\r\nexport const WeatherDaily = ({source}) =>{\r\n\r\n    const localDate = new Date(source.dt*1000)\r\n    let options = { weekday: 'long'}\r\n    let day = new Intl.DateTimeFormat('en-US', options).format(localDate)\r\n\r\n    let icon = source.weather[0].icon\r\n    return<Wrapper>\r\n        <Day>{day}</Day>\r\n        <img alt={'weather'} src={`http://openweathermap.org/img/wn/${icon}@2x.png`}/>\r\n        <Temperature>{parseInt(`${source.temp.day}`)}°</Temperature>\r\n        <Humidity>\r\n            <img alt={'drop'} src={drop}/>\r\n            <Percentage>{parseInt(`${source.humidity}`)}%</Percentage>\r\n        </Humidity>\r\n    </Wrapper>\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {WeatherDaily} from \"./WeatherDaily\";\r\n\r\nconst Wrapper = styled.div`\r\n    font-style:Montserrat;\r\n    width:880px;\r\n    height:220px;\r\n    margin:15px auto 0;\r\n    padding: 55px 45px 55px ;\r\n    border-radius:30px;\r\n    \r\n    display:flex;\r\n    align-items:space-between;\r\n    justify-content: space-between;\r\n    background: #E2E2E2;\r\n    \r\n     @media (max-width: 1000px) {\r\n     width:85%;\r\n     height:555px;\r\n     padding: 50px 10px 60px;\r\n     \r\n     flex-direction: column;\r\n  }\r\n    \r\n`\r\n\r\nexport const WeekWeather = (data) =>{\r\n    const dataWeek = data.data.slice(1,8)\r\n    return<Wrapper>\r\n        {\r\n            dataWeek.map((item,index)=><WeatherDaily source={item} key={index}/>)\r\n        }\r\n    </Wrapper>\r\n}","export default __webpack_public_path__ + \"static/media/like.fd1e3ef5.svg\";","export default __webpack_public_path__ + \"static/media/heart.b5723944.svg\";","export default __webpack_public_path__ + \"static/media/likeActive.c90addca.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport like from '../../img/like.svg';\r\nimport heart from '../../img/heart.svg';\r\nimport likeActive from '../../img/likeActive.svg';\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {favoritesActions} from \"../components/main/actions\";\r\n\r\nconst Favorites = styled.div`\r\n    width:24px;\r\n    height:24px;\r\n    margin:25px auto;\r\n \r\n     div:hover{\r\n       cursor:pointer;\r\n       background-image: url(${likeActive})\r\n     }\r\n    \r\n`\r\n const Heart = styled.div`\r\n    width:24px;    \r\n    height:24px;          \r\n    background-image: url(${like}) \r\n `\r\n\r\nconst HeartFull = styled.div`\r\n    width:24px;    \r\n    height:24px;          \r\n    background-image: url(${heart}) \r\n `\r\n\r\n\r\nexport const HeartButton=(props)=> {\r\n\r\n    const name = props.props;\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const {\r\n        data,\r\n        dataWeek\r\n    } = useSelector((state)=>state.weather);\r\n\r\n    //check is city in state\r\n    const stateFavorites = useSelector((state)=>state.favorites)\r\n\r\n    // console.log(data)\r\n    // console.log(dataWeek)\r\n    const dataAll = {\r\n        data,dataWeek\r\n    }\r\n\r\n    let isCityChecked = stateFavorites.hasOwnProperty(name)\r\n    return (\r\n        <>\r\n        {\r\n            isCityChecked ?\r\n                <Favorites onClick={()=>dispatch(favoritesActions.removeFromFavorites(name))}>\r\n                    <HeartFull/>\r\n                </Favorites>\r\n                :\r\n                <Favorites onClick={()=>dispatch(favoritesActions.addToFavorites(dataAll))}>\r\n                    <Heart/>\r\n                </Favorites>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {SearchBar} from '../../elements/SearchBar';\r\nimport {GeoLocation} from \"../../elements/GeoLocation\";\r\nimport {WeatherDate} from \"../../elements/WeatherDate\";\r\nimport {CurrentWeather} from \"../../elements/CurrentWeather\";\r\nimport {ShortDescription} from \"../../elements/ShortDescription\";\r\nimport {WeekWeather} from \"../../elements/WeekWeather\";\r\nimport {useWeatherFetch} from \"../../hooks/useWeatherFetch\";\r\nimport {HeartButton} from \"../../elements/Heart\";\r\n\r\nconst Wrapper = styled.div`\r\n    max-width:1000px;\r\n    margin:0 auto;\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    \r\n    text-align:center;\r\n    color:rgba(34, 34, 34, 1);\r\n    font-family: 'Montserrat', sans-serif;\r\n    \r\n`\r\n\r\nexport const MainWeather=()=> {\r\n    const {data,dataWeek, isLoading, error} = useWeatherFetch()\r\n    const getContent = ()=>{\r\n        if(error) {\r\n            if(error.status===404){\r\n                return <h2> Not Found </h2>\r\n            }else {\r\n                return <h2>Something went wrong</h2>\r\n            }\r\n        }\r\n        if(!data && isLoading) return <h2> LOADING...</h2>\r\n        if(!data) return null\r\n        return<>\r\n                <GeoLocation data = {data}/>\r\n                <WeatherDate data = {data}/>\r\n                <CurrentWeather main={data.main} icon={data.weather[0].icon}/>\r\n                <ShortDescription main={data.main} weather={data.weather[0].main}/>\r\n                <HeartButton props = {data.name}/>\r\n\r\n            <>\r\n            {dataWeek &&\r\n            <WeekWeather data = {dataWeek.daily}/>\r\n            }\r\n            </>\r\n            </>\r\n\r\n    }\r\n    return(\r\n         <Wrapper>\r\n             <SearchBar onSearch={(city) => {console.log(city)}}/>\r\n             {getContent()}\r\n         </Wrapper>\r\n )\r\n}\r\n\r\n","import {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {weatherActions} from '../components/main/actions';\r\n\r\nexport const useWeatherFetch = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        data,\r\n        dataWeek,\r\n        selectedCity,\r\n        isFetching,\r\n        error\r\n    } = useSelector((state)=>state.weather);\r\n\r\n\r\n    useEffect( () =>{\r\n        dispatch(weatherActions.fetchAsync(selectedCity))\r\n    }, [dispatch,selectedCity]);\r\n\r\n    return {\r\n        data,\r\n        dataWeek,\r\n        selectedCity,\r\n        isFetching,\r\n        error,\r\n    };\r\n}","import React from 'react';\r\nimport {MainWeather} from \"../../components/main/MainWeather\";\r\n\r\n\r\nexport const Main = () =>{\r\n    return(<>\r\n        <MainWeather/>\r\n    </>)\r\n}","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {GeoLocation} from \"../../elements/GeoLocation\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n    max-width:1000px;\r\n    margin:0 auto;\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    \r\n    text-align:center;\r\n    color:rgba(34, 34, 34, 1);\r\n    font-family: 'Montserrat', sans-serif;\r\n    \r\n    h1{\r\n        margin-top:150px;\r\n    }\r\n    a{\r\n        display:flex;\r\n        text-decoration: none;\r\n    }\r\n    \r\n`\r\nconst Line = styled.div`\r\n    width:300px;\r\n    margin:75px auto 0;\r\n    height:2px;\r\n    background-color:rgba(24, 24, 24, 0.5);\r\n`\r\nexport const Favorites = () =>{\r\n    const stateFavorites = useSelector((state)=>state.favorites)\r\n\r\n    const spinnerJSX = Object.keys(stateFavorites).length === 0 && (\r\n        <p>There are no favourite cities</p>\r\n    )\r\n\r\n    console.log(stateFavorites)\r\n\r\n    const dataJSX = Object.keys(stateFavorites).length !==0 &&\r\n        Object.values(stateFavorites).map((item,index)=>\r\n            <React.Fragment key={index}  ><NavLink to={`/city/${item.data.name}`}><GeoLocation data={item.data} key={item.data.name}/></NavLink><Line/></React.Fragment>)\r\n\r\n    return(<>\r\n        <Wrapper>\r\n            <h1>Favourite cities</h1>\r\n            {spinnerJSX}\r\n            {dataJSX}\r\n        </Wrapper>\r\n    </>)\r\n}","import React from 'react';\r\nimport {Favorites as FavoritesComponent} from \"../../components/favorites\";\r\n\r\nexport const Favorites = () =>{\r\n    return<>\r\n            <FavoritesComponent/>\r\n        </>\r\n}","import React from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {GeoLocation} from \"../../elements/GeoLocation\";\r\nimport {WeatherDate} from \"../../elements/WeatherDate\";\r\nimport {CurrentWeather} from \"../../elements/CurrentWeather\";\r\nimport {ShortDescription} from \"../../elements/ShortDescription\";\r\nimport {HeartButton} from \"../../elements/Heart\";\r\nimport {WeekWeather} from \"../../elements/WeekWeather\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    max-width:1000px;\r\n    margin:150px auto 0;\r\n    \r\n    display: flex;\r\n    flex-direction:column;\r\n    \r\n    text-align:center;\r\n    color:rgba(34, 34, 34, 1);\r\n    font-family: 'Montserrat', sans-serif;\r\n    \r\n    h2{\r\n        margin:50px auto;\r\n        max-width:50%;\r\n        line-height:170%;\r\n    }\r\n`\r\n\r\nexport const City = () =>{\r\n    const {id} = useParams()\r\n\r\n    const stateFavorites = useSelector((state)=>state.favorites)\r\n    console.log(id)\r\n    console.log(stateFavorites[id])\r\n    const data = stateFavorites[id]\r\n\r\n    const dataJSX = data&& (\r\n        <>\r\n            <GeoLocation data = {data.data}/>\r\n            <WeatherDate data = {data.data}/>\r\n            <CurrentWeather main={data.data.main} icon={data.data.weather[0].icon}/>\r\n            <ShortDescription main={data.data.main} weather={data.data.weather[0].main}/>\r\n            <HeartButton props = {data.data.name}/>\r\n            <WeekWeather data = {data.dataWeek.daily}/>\r\n        </>\r\n    )\r\n\r\n    const deletedCity = !data && (\r\n        <h2>{id} has been deleted from favorites</h2>\r\n    )\r\n    return(\r\n        <Wrapper>\r\n            {dataJSX}\r\n            {deletedCity}\r\n        </Wrapper>)\r\n}","import React from 'react';\r\nimport {City as CityComponent} from \"../../components/city\";\r\n\r\n\r\n\r\nexport const City = () =>{\r\n    return<>\r\n        <CityComponent/>\r\n    </>\r\n}","import React from 'react';\r\nimport {Switch,Route} from 'react-router-dom';\r\n\r\nimport {book} from \"./book\";\r\nimport {Main} from \"../pages/main\";\r\nimport {Favorites} from \"../pages/favorites\";\r\nimport {City} from \"../pages/city\";\r\n\r\nexport const Routes = () =>{\r\n    return<>\r\n            <Switch>\r\n                <Route exact path={book.root}>\r\n                    <Main/>\r\n                </Route>\r\n                <Route exact path={book.favorites}>\r\n                    <Favorites/>\r\n                </Route>\r\n                <Route exact path={book.city}>\r\n                    <City/>\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    \r\n    width:150px;\r\n    margin:0 auto;\r\n    \r\n    position:absolute;\r\n    top:70px;\r\n    right:200px;\r\n    display: flex;\r\n    flex-direction:row;\r\n    justify-content:space-between;\r\n        \r\n    a{\r\n        text-decoration:none;\r\n        color:rgba(34, 34, 34, 1);\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-size:16px;\r\n    }\r\n    a:hover{\r\n        color:#ec6e4c;\r\n    }\r\n   \r\n    @media(max-width:600px){\r\n        top: 30px;\r\n        left: 0;\r\n        right: 0;\r\n    }\r\n    \r\n`\r\n\r\nconst Line = styled.div`\r\n    border-left: 1px solid rgba(70, 70, 70, 0.7);\r\n    height: 20px;\r\n    \r\n`\r\n\r\nexport const Header =()=>{\r\n\r\n    return(\r\n        <>\r\n            <Wrapper>\r\n                <NavLink to=\"/\">Home</NavLink>\r\n                <Line/>\r\n                <NavLink to=\"/favorites\">Favorites</NavLink>\r\n            </Wrapper>\r\n        </>\r\n\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Provider from \"react-redux/es/components/Provider\";\nimport {store} from \"./app/init/store\";\nimport {Router} from \"react-router-dom\"\nimport {history} from \"./app/navigation/history\";\nimport {Routes} from \"./app/navigation\";\nimport {Header} from \"./app/components/header\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n        <Router history = {history}>\n            <Provider store={store}>\n                <Header/>\n                <Routes/>\n            </Provider>\n        </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}